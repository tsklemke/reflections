Q: When would you want to use a remote repository rather than keeping all your work separate?

The benefit of doing this is that it allows you to collaborate with other people and have 
access to your work from any computer. 

Q: Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

You don't want your changes pulled before you're ready to have them visible publicly. 

Q: Describe the difference between forks, clones, and branches. When would you 
use one instead of the other?

A fork is used within GitHub to clone another user's repository. The commits you 
make to the fork won't affect the other's user's original but they still get 
credit for their initial work. A clone is used to make a copy of a repository 
on your GitHub to your remote or to clone a repository to another location
on your local machine (local to local). A branch builds off of prior commits
but doesn't affect the previous versions. You use a fork if you want to work
on something someone else has built in GitHub without affecting their own work.
You clone when you want to work on something locally that's on your GitHub 
account. You use a branch when you want to experiment with a new feature without
affecting your master branch of commits. 
 
Q: What is a benefit of having the last known state of the remote stored locally?

If you didn't have access to an internet connection you could still work on 
your code locally. 

Q: How would you collaborate without using Git or GitHub? What would be 
easier, and what would be harder?

I could collaborate over email...it would be hard to merge code together, but
if we planned ahead and everyone stuck to the plan it might work out okay. It
would be easier in some ways than learning how to use Git and GitHub at first. 
In the long run though, Git and GitHub are far superior.